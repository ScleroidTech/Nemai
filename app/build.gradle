apply plugin: 'com.android.application'


android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId 'com.scleroid.nemai'
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        // Enabling multidex support.
         multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    defaultConfig {
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes.each {
        it.buildConfigField 'String', 'API_BASE_URL', "\" https://ec2-54-164-191-128.compute-1.amazonaws.com:3306/\""
    }
    productFlavors {
    }
    dataBinding {
        enabled = true
    }

    dexOptions {
        incremental true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    /* implementation 'com.android.support:support-v4:27.0.2'*/
    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:27.1.1'
    compile 'com.android.support:multidex:1.0.3'
    testCompile 'junit:junit:4.12'
    // Glide image library
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.android.gms:play-services-auth:15.0.1'
    compile 'com.basgeekball:awesome-validation:2.0'
   // compile files('libs/volley.jar')
    compile 'com.facebook.android:facebook-android-sdk:4.27.0'
    compile 'com.msg91.sendotp.library:library:3.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    compile 'com.hbb20:ccp:2.0.8'
    //implementation "android.arch.lifecycle:runtime:1.0.3"
    compile 'android.arch.lifecycle:extensions:1.1.1'
    compile 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor "android.arch.lifecycle:compiler:1.1.1"
    annotationProcessor "android.arch.persistence.room:compiler:1.1.1"
    compile 'com.google.android:flexbox:0.3.0-alpha2'
    //compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    // compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.github.lsjwzh.RecyclerViewPager:lib:v1.1.2@aar'
    // compile 'com.rollbar:rollbar-android:0+'
    compile 'com.github.javiersantos:MaterialStyledDialogs:2.1'
    compile 'com.github.GrenderG:Toasty:1.2.5'
    compile 'com.ramotion.garlandview:garland-view:0.2.1'
    compile 'org.greenrobot:eventbus:3.1.1'
    compile 'com.github.blocoio:faker:1.2.7'

    //Timber
    implementation 'com.jakewharton.timber:timber:4.6.1'

    compile 'io.reactivex.rxjava2:rxandroid:2.0.2'
    compile 'io.reactivex.rxjava2:rxjava:2.1.9'
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
  /*  compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }*/
    compile 'com.google.firebase:firebase-core:16.0.1'
    compile 'com.google.code.gson:gson:2.8.2'

    compile 'com.android.volley:volley:1.1.0'
    //  testCompile 'org.junit.jupiter:junit-jupiter-api'

    // retrofit, gson
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'

    // OkHttp Logging Interceptor
    implementation "com.squareup.okhttp3:okhttp:3.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.8.1"
// Testing support
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'

// RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    implementation 'com.github.humazed:RoomAsset:1.0.3'


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
}


apply plugin: 'com.google.gms.google-services'
//apply plugin: 'io.fabric'
//apply plugin: 'com.jakewharton.hugo'

//apply plugin: 'findbugs'

task findbugs(type: FindBugs) {
    ignoreFailures = false
    effort = "default"
    reportLevel = "medium"
    excludeFilter = new File("${project.rootDir}/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/classes")
    source = fileTree('src/main/java/')
    classpath = files()
    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination "$project.buildDir/findbugs/findbugs-output.xml"
        }
        html {
            destination "$project.buildDir/findbugs/findbugs-output.html"
        }
    }
}

apply plugin: 'com.android.application'


android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId 'com.scleroid.nemai'
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        // Enabling multidex support.
        multiDexEnabled true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    defaultConfig {
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    productFlavors {
    }

}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:multidex:1.0.2'
    testCompile 'junit:junit:4.12'
    // Glide image library
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.google.android.gms:play-services-auth:11.4.2'
    compile 'com.basgeekball:awesome-validation:2.0'
    compile files('libs/volley.jar')

    compile 'com.facebook.android:facebook-android-sdk:4.27.0'
    compile 'com.msg91.sendotp.library:library:3.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    compile 'com.hbb20:ccp:2.0.8'
    compile "android.arch.persistence.room:runtime:1.0.0-rc1"
    annotationProcessor "android.arch.persistence.room:compiler:1.0.0-rc1"
    compile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile 'com.github.lsjwzh.RecyclerViewPager:lib:v1.1.2@aar'
    compile 'com.rollbar:rollbar-android:0+'
    compile 'com.github.javiersantos:MaterialStyledDialogs:2.1'
    compile 'com.github.GrenderG:Toasty:1.2.5'
  //  testCompile 'org.junit.jupiter:junit-jupiter-api'
}
apply plugin: 'com.google.gms.google-services'
//apply plugin: 'findbugs'

task findbugs(type: FindBugs) {
    ignoreFailures = false
    effort = "default"
    reportLevel = "medium"
    excludeFilter = new File("${project.rootDir}/findbugs/findbugs-filter.xml")
    classes = files("${project.rootDir}/app/build/intermediates/classes")
    source = fileTree('src/main/java/')
    classpath = files()
    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination "$project.buildDir/findbugs/findbugs-output.xml"
        }
        html {
            destination "$project.buildDir/findbugs/findbugs-output.html"
        }
    }
}
